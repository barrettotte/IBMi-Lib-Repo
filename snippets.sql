
-- Generate SQL for PFs --
CALL QSYS2.GENERATE_SQL('MYTABLE%', 'BOLIB', 'TABLE', REPLACE_OPTION => '1', CREATE_OR_REPLACE_OPTION => '1', CONSTRAINT_OPTION => '2');
DROP TABLE QTEMP/Q_GENSQL;

-- Types: [ALIAS, CONSTRAINT, FUNCTION, INDEX, MASK, PERMISSION, PROCEDURE, SCHEMA, SEQUENCE, TABLE, TRIGGER, VARIABLE, VIEW, XSR]

-- Eh, not quite working as desired --
CALL QSYS2.GENERATE_SQL(
  DATABASE_OBJECT_NAME => 'MYTABLE',
  DATABASE_OBJECT_LIBRARY_NAME => 'BOLIB',
  DATABASE_OBJECT_TYPE => 'TABLE',
  DATABASE_SOURCE_FILE_NAME => 'QSQLSRC',
  DATABASE_SOURCE_FILE_LIBRARY_NAME => 'BOLIB',
  DATABASE_SOURCE_FILE_MEMBER => 'GENSQL',
  REPLACE_OPTION => '1',
  CREATE_OR_REPLACE_OPTION => '1',
  STATEMENT_FORMATTING_OPTION => '0'
);


-- Get column names from (Everywhere except QTEMP) --
SELECT TABLE_NAME, COLUMN_NAME, TYPE_NAME, COLUMN_SIZE, DATA_TYPE, ORDINAL_POSITION, COLUMN_TEXT FROM SYSIBM.SQLCOLUMNS
  WHERE TABLE_SCHEM = 'BOLIB' 
    AND TABLE_NAME = 'EXPOBJT';


-- Test service program --
CREATE OR ALTER FUNCTION TAN (X DOUBLE)
  RETURNS DOUBLE
  LANGUAGE SQL
  CONTAINS SQL
  DETERMINISTIC
  RETURN SIN(X)/COS(X)
;


-- Test SQL described table --
CREATE TABLE BOLIB.INVENTORY(
  PARTNO SMALLINT NOT NULL,
  DESCR VARCHAR(24),
  QONHAND INT,
  PRIMARY KEY(PARTNO)
);


-- Test View --
CREATE OR REPLACE VIEW BOLIB.EMPTY_INVENTORY FOR SYSTEM NAME EMPTYINV AS
  SELECT PARTNO, DESCR FROM BOLIB.INVENTORY
  WHERE QONHAND = 0
;


CREATE OR ALTER PROCEDURE BOLIB.UPDATE_QOH
  (
    IN PNO SMALLINT,
    IN QOH INT
  )
  LANGUAGE SQL MODIFIES SQL DATA
  UPDATE BOLIB.INVENTORY
    SET QONHAND = QOH
    WHERE PARTNO = PNO
;